<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MultiplayerButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="SinglePlayerButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JPwHR+N31/oMkxIAAAAASUVORK5CYII=
</value>
  </data>
</root>